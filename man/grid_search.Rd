% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trend_partitioning.R
\name{grid_search}
\alias{grid_search}
\title{Grid Search for Integration Window}
\usage{
grid_search(
  data,
  design_matrix,
  penalty = p,
  workers = 1,
  n_h1 = 5,
  n_h2 = 5,
  h1_prop = c(0.001, 0.25),
  h2_prop = c(0.001, 0.25),
  formula = c(sd ~ mean + c),
  plot = TRUE
)
}
\arguments{
\item{data}{A \code{tibble} or \code{data.frame} to partition}

\item{design_matrix}{A design matrix for the data (see example)}

\item{penalty}{Penalty function for the penalized likelihood, defaults to \link{p}}

\item{workers}{Number of parallel workers to use}

\item{n_h1, n_h2}{Number of window sizes to use for \code{h1}/\code{h2} if default
grid is used.}

\item{h1_prop, h2_prop}{Start and end proportion of the range of the sd
for the window sizes.}

\item{formula}{Formula for the Gamma regression}

\item{plot}{Should a plot of the final solution be printed?}
}
\value{
A tibble of integration windows sorted from highest (best) to lowest
(worst) penalized likelihood values.
}
\description{
Performs a grid search over a set of values of h.
}
\examples{
# Normalize data
design <- model.matrix(~ 0 + factor(rep(1:2, each = 3)))
colnames(design) <- paste0("ng", c(50, 100))

yeast_norm <- yeast \%>\%
  psrn("identifier") \%>\%
  # Take ~half the data to reduce running time of example
  dplyr::sample_frac(.4)
yeast_norm \%>\%
  calculate_mean_sd_trends(design) \%>\%
  grid_search(design, n_h1 = 2, n_h2 = 2)
}
