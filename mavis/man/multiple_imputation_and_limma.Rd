% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multiple_imputation_and_limma.R
\name{multiple_imputation_and_limma}
\alias{multiple_imputation_and_limma}
\title{Run multiple imputation and limma}
\usage{
multiple_imputation_and_limma(
  data,
  design,
  contrast_matrix,
  imputations,
  workers = 1,
  id_col = "id",
  .robust = TRUE,
  plot_trend = FALSE
)
}
\arguments{
\item{data}{The data to run the pipeline on, missing values should have NA
values.}

\item{design}{A design matrix as produced by \code{\link[stats]{model.matrix}}.}

\item{contrast_matrix}{A contrast matrix of comparisons to perfrom see
\code{\link[limma]{makeContrasts}} for details.}

\item{imputations}{Number of imputations to perfrome.}

\item{workers}{Number of workers (processes) to run the pipeline with.
Any value >1 will run the pipeline with parallel computing using the
\code{\link[multidplyr]{multidplyr-package}}.}

\item{id_col}{A character for the name of the column containing the
name of the features in data (e.g., peptides, proteins, etc.).}

\item{.robust}{Input to limma robust option}

\item{plot_trend}{Should the mean-variance trend with the gamma regression be
plotted?}
}
\value{
A tibble with each imputation as a row. The first column contains the
imputation number, the second contains the imputed data, and the last
column contains the results produced by \code{\link[mavis]{run_limma_and_lfc}}.
}
\description{
This function is an efficient wrapper that fits the needed gamma regressions,
performs multiple imputation and testing with limma (see \code{\link[limma]{limmaUsersGuide}}).
It is an efficient wrapper that generates need inputs for imputation and
running \code{\link[pair]{run_limma_and_lfc}} with the possibility of using
\code{\link[multidplyr]{multidplyr-package}} to paralellize the computation.
It also calls produces the mean-variance trends if \code{plot_trend} is \code{TRUE}.
}
\examples{
# Generate a design matrix for the data
design <- model.matrix(~ 0 + factor(rep(1:2, each = 3)))

# Set correct colnames, this is important for fit_gamma_*
colnames(design) <- paste0("ng", c(50, 100))

# Generate the contrast matrix
contrast <- limma::makeContrasts(
  contrasts = "ng100-ng50",
  levels = design
)

# Normalize and log-transform the data
yeast <- psrn(yeast_prog, "identifier")
\dontrun{
results <- multiple_imputation_and_limma(yeast, design, contrast, 1000, 5, "identifier", TRUE)
}
}
